# ***************************************************************************
# *   Copyright (c) 2023 0penBrain                               *
# *                                                                         *
# *   This program is free software; you can redistribute it and/or modify  *
# *   it under the terms of the GNU Lesser General Public License (LGPL)    *
# *   as published by the Free Software Foundation; either version 2 of     *
# *   the License, or (at your option) any later version.                   *
# *   for detail see the LICENCE text file.                                 *
# *                                                                         *
# *   This program is distributed in the hope that it will be useful,       *
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
# *   GNU Library General Public License for more details.                  *
# *                                                                         *
# *   You should have received a copy of the GNU Library General Public     *
# *   License along with this program; if not, write to the Free Software   *
# *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  *
# *   USA                                                                   *
# *                                                                         *
# ***************************************************************************

# This is a build and test workflow for CI of I-SIMPA.
# This workflow aims at building and testing I-SIMPA on Windows using MSVC.

name: Build Windows
on:
  workflow_call:
    inputs:
      artifactBasename:
        type: string
        required: true
      allowedToFail:
        default: false
        type: boolean
        required: false
    outputs:
      reportFile:
        value: ${{ jobs.Build.outputs.reportFile }}

jobs:
  Build:
    runs-on: windows-${{ matrix.vsversion }}
    name: MSW vs${{ matrix.vsversion }} ${{ matrix.configuration }} ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - configuration: 'DLL Release'
            platform: 'x64'
            vsversion: 2022
    continue-on-error: ${{ inputs.allowedToFail }}
    env:
      CPM_SOURCE_CACHE: C:/ISIMPA/CPM/
      CCACHE_DIR: C:/ISIMPA/cache/
      CCACHE_COMPILERCHECK: "%compiler%" # default:mtime
      CCACHE_MAXSIZE: 1G
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 1
      CCACHE_NOHASHDIR: true
      CCACHE_DIRECT: true
      #CCACHE_SLOPPINESS: "pch_defines,time_macros" # Can't get PCH to work on Windows
      CCACHE_LOGFILE: C:/logs/ccache.log
      ## Have to use C:\ because not enough space on workspace drive
      builddir: C:/ISIMPA/build/release/
      ccachebindir: C:/ISIMPA/ccache/
      logdir: C:/logs/
      reportdir: C:/report/
      reportfilename: ${{ inputs.artifactBasename }}-report.md
    outputs:
      reportFile: ${{ steps.Init.outputs.reportFile }}

    steps:
      - name: Checking out source code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Make needed directories, files and initializations
        id: Init
        run: |
          mkdir ${{ env.CCACHE_DIR }}
          mkdir ${{ env.ccachebindir }}
          mkdir ${{ env.builddir }}
          mkdir ${{ env.logdir }}
          mkdir ${{ env.reportdir }}
          echo "reportFile=${{ env.reportfilename }}" >> $GITHUB_OUTPUT
      - name: Cache CPM dependency packages
        uses: actions/cache@v3
        with:
          save-always: true
          path: |
            ${{ env.CPM_SOURCE_CACHE }}
          key: ${{ runner.os }}-isimpa
      - name: Get Ccache
        uses: ./.github/workflows/actions/windows/getCcache
        with:
          ccachebindir: ${{ env.ccachebindir }}
      - name: Restore compiler cache
        uses: actions/cache@v4
        with:
          save-always: true
          path: ${{ env.CCACHE_DIR }}
          key: ISIMPA-Windows-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            ISIMPA-Windows-${{ github.ref }}-
            ISIMPA-Windows-
      - name: Print Ccache statistics before build, reset stats and print config
        run: |
          . $env:ccachebindir\ccache -s
          . $env:ccachebindir\ccache -z
          . $env:ccachebindir\ccache -p
      - name: Install NuGet Packages
        shell: powershell
        run: |
            nuget install swigwintools -OutputDirectory "${{ env.builddir }}/Tools" -Version 4.2.0
            nuget install python -Version 3.8 -OutputDirectory "${{ env.builddir }}/Tools"
      - name: Configuring CMake
        run: >
          cmake -B"${{ env.builddir }}" .
          -DCPM_SOURCE_CACHE=${{ env.CPM_SOURCE_CACHE }} 
          -DCMAKE_VS_NO_COMPILE_BATCHING=ON
          -DCMAKE_BUILD_TYPE=Release
          -DSWIG_EXECUTABLE=${{ env.builddir }}swigwintools.4.2.0/tools/swigwin-4.2.0/swig.exe
          -DSWIG_DIR=${{ env.builddir }}swigwintools.4.2.0/tools/swigwin-4.2.0
          -DPython_ROOT_DIR=${{ env.builddir }}python.3.8.0/tools
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      - name: Compiling sources
        run: |
          cd $env:builddir
          msbuild ALL_BUILD.vcxproj /m /p:Configuration=Release /p:TrackFileAccess=false /p:CLToolPath=${{ env.ccachebindir }}
      - name: Print Ccache statistics after build
        run: |
          . $env:ccachebindir\ccache -s
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifactBasename }}-Logs
          path: |
            ${{ env.logdir }}
