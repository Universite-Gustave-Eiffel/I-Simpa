name: CMake

on: [workflow_dispatch, push, pull_request]


concurrency:
  group: FC-CI-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04       
    env:
      CPM_SOURCE_CACHE: ~/.cache/CPM
    steps:
      - uses: actions/checkout@v3
      - name: Install I-SIMPA dependencies
        run: |
          sudo sed -i 's/azure\.//' /etc/apt/sources.list 
          sudo apt-get update 
          sudo apt-get install -y --no-install-recommends \
          build-essential \
          libgtk-3-dev \
          freeglut3-dev \
          libxmu-dev \
          libxi-dev \
          libpng-dev \
          libjpeg-dev \
          libxxf86vm1 \
          libxxf86vm-dev \
          libxi-dev \
          libxrandr-dev \
          mesa-common-dev \
          mesa-utils \
          libgl1-mesa-dev \
          libglapi-mesa \
          byacc \
          gettext \
          cmake \
          python3-dev \
          swig \
          libboost-all-dev
      - name: Cache CPM dependency packages
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CPM_SOURCE_CACHE }}
          key: ${{ runner.os }}-isimpa

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          cmake -DCPM_SOURCE_CACHE=${{ env.CPM_SOURCE_CACHE }} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        working-directory: ${{github.workspace}}/build
        # Compile i-simpa
        run: make

      - name: Install
        working-directory: ${{github.workspace}}/build
        # Copy stuff to bin subdirectory for "standalone" application
        run: make install

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: make test

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: isimpa-amd64.zip 
          path: ${{github.workspace}}/build/bin
          
