
# specify custom environment variables
environment:
  matrix:
    - VisualStudioVersion: 14.2
      platform: x64
      configuration: Release
      vcvarsall_platform: "x64"
  global:
    MSVC_DEFAULT_OPTIONS: ON
    BOOST_ROOT: C:\Libraries\boost_1_73_0
    BOOST_LIBRARYDIR: C:\Libraries\boost_1_73_0\lib64-msvc-14.2
    PYTHON_LIBRARY: C:\Python38-x64\libs\python38.lib
    PYTHON_INCLUDE_DIR: C:\Python38-x64\include
    WXWIN: C:\wxWidgets-3.1.5\
    wxWidgets_ROOT_DIR: C:\wxWidgets-3.1.5\
    wxWidgets_INCLUDE_DIRS: C:\wxWidgets-3.1.5\include
    wxWidgets_LIBRARIES: C:\wxWidgets-3.1.5\lib\vc14x_x64_dll
    SWIG_DIR: C:\ProgramData\chocolatey\lib\swig\tools
    #SWIG_EXECUTABLE: C:\Libraries\swigwin-3.0.11\swig.exe
    PYTHON_EXECUTABLE: C:\Python38-x64\python.exe
    CTEST_OUTPUT_ON_FAILURE: 1

# Operating system (build VM template)
os: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input


# clone directory
clone_folder: c:\projects\isimpa

platform: x64
configuration: Release


# scripts to run before build
before_build:
  - ps: git rev-parse HEAD
  # msbuild will use x64 visual studio compiler
  - '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"'
  # Copy x64 dll from system32 to python27 x64
  #- cmd: copy c:\windows\system32\PYTHON27.DLL C:\Python27-x64\python27.dll
  - echo Download wxWidgets lib
  - ps: Start-FileDownload 'https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.5/wxWidgets-3.1.5.7z'
  - ps: Start-FileDownload 'https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.5/wxMSW-3.1.5_vc14x_x64_Dev.7z'
  - cmd: 7z x -aoa wxWidgets-3.1.5.7z -oC:\wxWidgets-3.1.5
  - cmd: 7z x -aoa wxMSW-3.1.5_vc14x_x64_Dev.7z -oC:\wxWidgets-3.1.5
  - cmd: dir %wxWidgets_LIBRARIES%
  # Download Release wxWidgets DLL's
  - ps: Start-FileDownload 'https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.5/wxMSW-3.1.5_vc14x_x64_ReleaseDLL.7z' -Timeout 15000
  - cmd: 7z x -aoa wxMSW-3.1.5_vc14x_x64_ReleaseDLL.7z -oC:\wxWidgets-3.1.5
  # install dependencies:
  - choco install poedit nsis 7zip.install
  #- ps: Start-FileDownload 'https://github.com/nicolas-f/build_resources/raw/master/swigwin-3.0.11.zip' -FileName 'c:\Libraries\swigwin-3.0.11.zip' -Timeout 15000
  #- ps: 7z x c:\Libraries\swigwin-3.0.11.zip -oC:\Libraries -r -y
  - choco install swig
  - cmd: SET PATH=%PATH%;%WXWIN%;%SWIG_DIR%;%wxWidgets_LIB_DIR%;C:\Program Files (x86)\Poedit\Gettexttools\bin;%BOOST_LIBRARYDIR%;
  - ps: swig.exe -version
  - echo Running cmake...
  - cmd: mkdir c:\projects\isimpa\build
  - cmd: cd c:\projects\isimpa\build
  - cmd: echo wxWidgets_CONFIGURATION:STRING=mswu > CMakeCache.txt
  - cmd: echo wxWidgets_LIB_DIR:PATH=%wxWidgets_LIBRARIES% >> CMakeCache.txt
  - cmd: echo wxWidgets_ROOT_DIR:PATH=%wxWidgets_ROOT_DIR% >> CMakeCache.txt
  - cmd: echo WX_LIB_DIR:INTERNAL=%wxWidgets_LIBRARIES% >> CMakeCache.txt
  - cmd: echo WX_ROOT_DIR:INTERNAL=%wxWidgets_ROOT_DIR% >> CMakeCache.txt
  - cmd: echo PYTHON_EXECUTABLE:FILEPATH=%PYTHON_EXECUTABLE% >> CMakeCache.txt
  - cmake --debug-output -G "Visual Studio 16 2019" -A x64 c:\projects\isimpa

build_script:
  - cd c:\projects\isimpa\build
  - ECHO Building %configuration% %platform% with MSVC %VisualStudioVersion% using %PlatformToolset% PlatformToolset
  - dir
  - 'call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"'
  - msbuild "INSTALL.vcxproj" /consoleloggerparameters:Verbosity=minimal /target:Build  /p:Configuration=%configuration% /p:Platform=%platform% /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

after_build:
  - cd c:\projects\isimpa\build
  - ECHO Package I-SIMPA %configuration% %platform% with MSVC %VisualStudioVersion% using %PlatformToolset% PlatformToolset
  - msbuild "PACKAGE.vcxproj" /consoleloggerparameters:Verbosity=minimal /target:Build  /p:Configuration=%configuration% /p:Platform=%platform% /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

# Test script disabled, don't know why python can't find libsimpa under Appveyor
test_script:
  # Skip DLL/LIBS listing, uncomment for debugging missing dlls
  #- choco install dependencywalker -y --allow-empty-checksums
  #- depends.exe /f:1 /c /oc:c:\projects\isimpa\build\depends.txt c:\projects\isimpa\build\bin\isimpa.exe
  - cd c:\projects\isimpa\build
  - ECHO Test I-SIMPA %configuration% %platform% with MSVC %VisualStudioVersion% using %PlatformToolset% PlatformToolset
  - appveyor-retry msbuild "RUN_TESTS.vcxproj" /target:Build  /p:Configuration=%configuration% /p:Platform=%platform% /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

on_finish:
    - if exist c:\projects\isimpa\build\depends.txt ( type c:\projects\isimpa\build\depends.txt )
    - if exist c:\projects\isimpa\build\Testing\Temporary\LastTest.log ( type c:\projects\isimpa\build\Testing\Temporary\LastTest.log )
artifacts:
  - path: 'build\*.exe'
    name: isimpa-win64-install
  - path: 'build\*.zip'
    name: isimpa-win64-standalone
  - path: 'build\CMakeFiles\CMakeOutput.log'
    name: cmake_output_log
  - path: 'build\CMakeFiles\CMakeError.log'
    name: cmake_output_log
